import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
import requests
import dotenv
import os 

# Cargar variables de entorno desde un archivo .env
dotenv.load_dotenv()

# Configurar el registro
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.ERROR
)
logger = logging.getLogger(__name__)

# Clave de API y URL de ExchangeRate-API    
URL = os.getenv("URL")

# Funci√≥n para obtener las tasas de cambio
def get_rates():
    response = requests.get(URL)
    if response.status_code != 200:
        logger.error("No se pudo obtener las tasas de cambio.")
        return None
    data = response.json()
    return data["conversion_rates"]

# Funci√≥n para convertir divisas
def convert_currency(amount, from_currency, to_currency, rates):
    from_currency = from_currency.upper()
    to_currency = to_currency.upper()

    if from_currency != "USD":
        amount = amount / rates[from_currency]
    return amount * rates[to_currency]

# Funci√≥n de inicio
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    welcome_message = (
        "üëã ¬°Hola! Bienvenido al Bot Conversor de Divisas üåçüí±\n\n"
        "üõ†Ô∏è **C√≥mo usar el bot:**\n"
        "1. Usa el comando /convert seguido de la cantidad, la divisa de origen y la divisa de destino.\n"
        "   Por ejemplo: `/convert 100 USD EUR`\n\n"
        "üîÑ **Ejemplo de uso:**\n"
        "   `/convert 50 EUR USD`\n"
        "   Esto convertir√° 50 euros a d√≥lares estadounidenses.\n\n"
        "üí° **Divisas disponibles:**\n"
        "   Usa el comando /divisas para ver la lista de c√≥digos de divisas v√°lidos.\n\n"
        "‚ùì **Donar:**\n"
        "   Si te gusta el bot y quieres contribuir al proyecto, puedes utilizar /donate.\n\n"
        "¬°Empieza a convertir divisas ahora! üöÄ"
    )
    await update.message.reply_text(welcome_message, parse_mode='Markdown')

# Funci√≥n para mostrar los c√≥digos de las divisas disponibles
async def divisas(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(f"üí± **Divisas disponibles:**\n\n"
                                    "USD: D√≥lar Estadounidense\n"
                                    "AED: Dirham de los Emiratos √Årabes Unidos\n"
                                    "AFN: Afghani\n"
                                    "ALL: Lek\n"
                                    "AMD: Dram Armenio\n"
                                    "ANG: Flor√≠n de las Antillas Neerlandesas\n"
                                    "AOA: Kwanza\n"
                                    "ARS: Peso Argentino\n"
                                    "AUD: D√≥lar Australiano\n"
                                    "AWG: Flor√≠n Arube√±o\n"
                                    "AZN: Manat Azerbaiyano\n"
                                    "BAM: Marco Convertible\n"
                                    "BBD: D√≥lar de Barbados\n"
                                    "BDT: Taka\n"
                                    "BGN: Lev B√∫lgaro\n"
                                    "BHD: Dinar Bahrein√≠\n"
                                    "BIF: Franco Burund√©s\n"
                                    "MD: D√≥lar de Bermudas\n"
                                    "BND: D√≥lar de Brunei\n"
                                    "BOB: Boliviano\n"
                                    "BRL: Real Brasile√±o\n"
                                    "BSD: D√≥lar Bahame√±o\n"
                                    "BTN: Ngultrum\n"
                                    "BWP: Pula\n"
                                    "BYN: Rublo Bielorruso\n"
                                    "BZD: D√≥lar de Belice\n"
                                    "CAD: D√≥lar Canadiense\n"
                                    "CDF: Franco Congole√±o\n"
                                    "CHF: Franco Suizo\n"
                                    "CLP: Peso Chileno\n"
                                    "CNY: Yuan Renminbi\n"
                                    "COP: Peso Colombiano\n"
                                    "CRC: Col√≥n Costarricense\n"
                                    "CUP: Peso Cubano\n"
                                    "CVE: Escudo Caboverdiano\n"
                                    "CZK: Corona Checa\n"
                                    "DJF: Franco Yibutiano\n"
                                    "DKK: Corona Danesa\n"
                                    "DOP: Peso Dominicano\n"
                                    "DZD: Dinar Argelino\n"
                                    "EGP: Libra Egipcia\n"
                                    "ERN: Nakfa\n"
                                    "ETB: Birr Et√≠ope\n"
                                    "EUR: Euro\n"
                                    "FJD: D√≥lar Fiyiano\n"
                                    "FKP: Libra de las Islas Malvinas\n"
                                    "FOK: Corona Feroesa\n"
                                    "GBP: Libra Esterlina\n"
                                    "GEL: Lari\n"
                                    "GGP: Libra de Guernsey\n"
                                    "GHS: Cedi\n"
                                    "GIP: Libra de Gibraltar\n"
                                    "GMD: Dalasi\n"
                                    "GNF: Franco Guineano\n"
                                    "GTQ: Quetzal\n"
                                    "GYD: D√≥lar de Guyana\n"
                                    "HKD: D√≥lar de Hong Kong\n"
                                    "HNL: Lempira\n"
                                    "HRK: Kuna Croata\n"
                                    "HTG: Gourde Haitiano\n"
                                    "HUF: Flor√≠n H√∫ngaro\n"
                                    "IDR: Rupia Indonesia\n"
                                    "ILS: Nuevo Shekel Israel√≠\n"
                                    "IMP: Libra de la Isla de Man\n"
                                    "INR: Rupia India\n"
                                    "IQD: Dinar Iraqu√≠\n"
                                    "IRR: Rial Iran√≠\n"
                                    "ISK: Corona Islandesa\n"
                                    "JEP: Libra de Jersey\n"
                                    "JMD: D√≥lar Jamaicano\n"
                                    "JOD: Dinar Jordano\n"
                                    "JPY: Yen\n"
                                    "KES: Chel√≠n Keniano\n"
                                    "KGS: Som\n"
                                    "KHR: Riel\n"
                                    "KID: D√≥lar Kiribatiano\n"
                                    "KMF: Franco Comorense\n"
                                    "KRW: Won Surcoreano\n"
                                    "KWD: Dinar Kuwait√≠\n"
                                    "KYD: D√≥lar de las Islas Caim√°n\n"
                                    "KZT: Tenge\n"
                                    "LAK: Kip\n"
                                    "LBP: Libra Libanesa\n"
                                    "LKR: Rupia de Sri Lanka\n"
                                    "LRD: D√≥lar Liberiano\n"
                                    "LSL: Loti\n"
                                    "LYD: Dinar Libio\n"
                                    "MAD: Dirham Marroqu√≠\n"
                                    "MDL: Leu Moldavo\n"
                                    "MGA: Ariary\n"
                                    "MKD: Denar\n"
                                    "MMK: Kyat\n"
                                    "MNT: Tugrik\n"
                                    "MOP: Pataca\n"
                                    "MRU: Ouguiya\n"
                                    "MUR: Rupia de Mauricio\n"
                                    "MVR: Rufiyaa\n"
                                    "MWK: Kwacha Malau√≠\n"
                                    "MXN: Peso Mexicano\n"
                                    "MYR: Ringgit\n"
                                    "MZN: Metical\n"
                                    "NAD: D√≥lar Namibio\n"
                                    "NGN: Naira\n"
                                    "NIO: C√≥rdoba\n"
                                    "NOK: Corona Noruega\n"
                                    "NPR: Rupia Nepalesa\n"
                                    "NZD: D√≥lar Neozeland√©s\n"
                                    "OMR: Rial Oman√≠\n"
                                    "PAB: Balboa\n"
                                    "PEN: Sol\n"
                                    "PGK: Kina\n"
                                    "PHP: Peso Filipino\n"
                                    "PKR: Rupia Pakistan√≠\n"
                                    "PLN: Zloty\n"
                                    "PYG: Guaran√≠\n"
                                    "QAR: Rial Catar√≠\n"
                                    "RON: Leu Rumano\n"
                                    "RSD: Dinar Serbio\n"
                                    "RUB: Rublo Ruso\n"
                                    "RWF: Franco Ruand√©s\n"
                                    "SAR: Riyal Saud√≠\n"
                                    "SBD: D√≥lar de las Islas Salom√≥n\n"
                                    "SCR: Rupia de Seychelles\n"
                                    "SDG: Libra Sudanesa\n"
                                    "SEK: Corona Sueca\n"
                                    "SGD: D√≥lar de Singapur\n"
                                    "SHP: Libra de Santa Elena\n"
                                    "SLE: Leone\n"
                                    "SLL: Leone\n"
                                    "SOS: Chel√≠n Somal√≠\n"
                                    "SRD: D√≥lar Surinam√©s\n"
                                    "SSP: Libra del Sur de Sud√°n\n"
                                    "STN: Dobra\n"
                                    "SYP: Libra Siria\n"
                                    "SZL: Lilangeni\n"
                                    "THB: Baht Tailand√©s\n"
                                    "TJS: Somoni\n"
                                    "TMT: Manat Turcomano\n"
                                    "TND: Dinar Tunecino\n"
                                    "TOP: Pa ªanga\n"
                                    "TRY: Lira Turca\n"
                                    "TTD: D√≥lar de Trinidad y Tobago\n"
                                    "TVD: D√≥lar Tuvaluano\n"
                                    "TWD: D√≥lar de Taiw√°n\n"
                                    "TZS: Chel√≠n Tanzano\n"
                                    "UAH: Grivna\n"
                                    "UGX: Chel√≠n Ugand√©s\n"
                                    "UYU: Peso Uruguayo\n"
                                    "UZS: Sum\n"
                                    "VES: Bol√≠var Soberano\n"
                                    "VND: Dong\n"
                                    "VUV: Vatu\n"
                                    "WST: Tala\n"
                                    "XAF: Franco CFA de √Åfrica Central\n"
                                    "XCD: D√≥lar del Caribe Oriental\n"
                                    "XDR: Derechos Especiales de Giro\n"
                                    "XOF: Franco CFA de √Åfrica Occidental\n"
                                    "XPF: Franco CFP\n"
                                    "YER: Rial Yemen√≠\n"
                                    "ZAR: Rand Sudafricano\n"
                                    "ZMW: Kwacha Zambiano\n"
                                    "ZWL: D√≥lar Zimbabuense"            
                                    , parse_mode='Markdown')

# Funci√≥n para convertir divisas desde el comando /convert
async def convert(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        args = context.args
        if len(args) != 3:
            await update.message.reply_text("‚ùå **Error en el comando /convert**\n\n"
            "Para usar este comando, introduce los par√°metros en el siguiente formato:\n"
            "`/convert cantidad from_currency to_currency`\n\n"
            "üîÑ **Ejemplo de uso:**\n"
            "`/convert 50 EUR USD`\n"
            "Esto convertir√° 50 euros a d√≥lares estadounidenses.\n\n"
            "üí° Usa /divisas para ver la lista de c√≥digos de divisas v√°lidos.",
            parse_mode='Markdown')
            return

        amount = float(args[0])
        from_currency = args[1].upper()
        to_currency = args[2].upper()

        rates = get_rates()
        if not rates:
            await update.message.reply_text("No se pudieron obtener las tasas de cambio.")
            return

        if from_currency not in rates or to_currency not in rates:
            await update.message.reply_text("Una de las divisas no es v√°lida.")
            return

        result = convert_currency(amount, from_currency, to_currency, rates)
        await update.message.reply_text(f"{amount} {from_currency} es igual a {result:.2f} {to_currency}")

    except (ValueError, IndexError):
        await update.message.reply_text("Uso: /convert cantidad from_currency to_currency")

# Funci√≥n para manejar errores
async def error(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    logger.warning(f"Update {update} caused error {context.error}")

async def donate(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("üí∞ Direccion TON: `UQCrYeiQTHwVOrtJ5TFVEf_cGtJvq_P4AjBYRv0t-aFzW6Fi`", parse_mode="Markdown")

def main() -> None:
    # Token del bot de Telegram
    token = os.getenv("TOKEN")
    
    application = Application.builder().token(token).build()

    # Comandos
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("convert", convert))
    application.add_handler(CommandHandler("divisas", divisas))
    application.add_handler(CommandHandler("donate", donate))

    # Errores
    application.add_error_handler(error)

    # Iniciar el bot
    application.run_polling()

if __name__ == '__main__':
    main()
